name: Build & Deploy

on:
  push:
    branches:
      - master
      - production

env:
  API_IMAGE: ghcr.io/${{ github.repository_owner }}/cookbook-api:${{ github.ref_name }}
  WEB_IMAGE: ghcr.io/${{ github.repository_owner }}/cookbook-web:${{ github.ref_name }}

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push API
        uses: docker/build-push-action@v3
        with:
          context: '{{defaultContext}}:api'
          push: true
          tags: ${{ env.API_IMAGE }}

  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and push web
        uses: docker/build-push-action@v3
        with:
          context: '{{defaultContext}}:web'
          push: true
          tags: ${{ env.WEB_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-api
      - build-web
    env:
      LETSENCRYPT_EMAIL: ${{ secrets.LETSENCRYPT_EMAIL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      FIREBASE_ADMIN_SDK: ${{ secrets.FIREBASE_ADMIN_SDK }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare .env and configs
        working-directory: ./deploy
        run: |
          printenv FIREBASE_ADMIN_SDK > zradelnik-firebase-adminsdk.json
          [ "$GITHUB_REF_NAME" = master ] && envsubst < .env.staging > .env || true
          [ "$GITHUB_REF_NAME" = production ] && envsubst < .env.production > .env || true
          [ "$GITHUB_REF_NAME" != master -a "$GITHUB_REF_NAME" != production ] && envsubst < .env.feature > .env || true
      - name: rsync deploy folder
        uses: up9cloud/action-rsync@v1.3
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          SOURCE: ./deploy/
          TARGET: ~/www/cookbook_${{ github.ref_name }}
      - name: rsync nginx/vhost.d
        uses: up9cloud/action-rsync@v1.3
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          SOURCE: ./deploy/vhost.d/
          TARGET: ~/nginx/vhost.d
          ARGS: -avz
      - name: Update with Docker Compose
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            cd ~/www/cookbook_${{ github.ref_name }}
            docker-compose pull
            docker-compose down --remove-orphans
            docker-compose up -d
